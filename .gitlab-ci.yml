stages:
  - quality check
  - html
  - pdf
  - collect


linting:
  stage: quality check
  image:
    name: stdevel/simple-linter
    entrypoint: [""]
  script:
    - /entrypoint.py . -E ./build.py
  allow_failure: true


render html:
  stage: html
  needs: []
  image:
    name: python:alpine
  script:
    - python build.py
  artifacts:
    paths:
      - presentation.html


build presentation:
  stage: pdf
  image:
    name: astefanutti/decktape
    entrypoint: [""]
  script:
    - node /decktape/decktape.js --chrome-path chromium-browser --chrome-arg=--no-sandbox --chrome-arg=--disable-web-security remark presentation.html presentation.pdf
  artifacts:
    paths:
      - presentation.pdf
      - presentation.html


build handout:
  stage: pdf
  dependencies: []
  image:
    name: pistatium/markdown-pdf
  script:
    - markdown-pdf -o handout.pdf handout.md
  artifacts:
    paths:
      - handout.pdf
  rules:
    - exists:
        - handout.md


build lab guide:
  stage: pdf
  dependencies: []
  image:
    name: pistatium/markdown-pdf
  script:
    - markdown-pdf -o labs.pdf labs.md
  artifacts:
    paths:
      - labs.pdf
  rules:
    - exists:
        - labs.md




.collect files template: &collect-files-template
  stage: collect
  image: alpine
  script:
    - echo "Collecting files..."


collect files:
  <<: *collect-files-template
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - css/
      - imgs/
      - assets/
      - remark-latest.min.js
      - presentation.html
      - ./*.pdf
  except:
    - tags


create release:
  <<: *collect-files-template
  artifacts:
    expire_in: never
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - css/
      - imgs/
      - assets/
      - remark-latest.min.js
      - presentation.html
      - ./*.pdf
  only:
    - tags
